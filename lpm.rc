on early-init
    start ueventd

on init
loglevel 3
    export PATH /sbin:/system/bin
    export ANDROID_ROOT /system
    export ANDROID_ASSETS /system/app
    export ANDROID_DATA /data
    export ASEC_MOUNTPOINT /mnt/asec
    export LOOP_MOUNTPOINT /mnt/obb
    export BOOTCLASSPATH /system/framework/core.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/android.policy.jar:/system/framework/services.jar:/system/framework/core-junit.jar

# Backward compatibility
    symlink /system/etc /etc

    mkdir /system
    mkdir /data 0771 system system
    mkdir /cache 0770 system cache
    mkdir /config 0500 root root


on fs
    # Mount /system rw first to give the filesystem a chance to save a checkpoint
    mount ext4 /dev/block/mmcblk0p4 /system wait ro
	mount ext4 /dev/block/platform/sdhci-tegra.3/by-num/p8 /data wait noatime nosuid nodev noauto_da_alloc
	mkdir /data/log 0775 system system

on post-fs
    # once everything is setup, no need to modify /
    mount rootfs rootfs / ro remount

on boot
# backlight
    chown system system /sys/class/backlight/pwm-backlight/brightness

    class_start core
    class_start main

#service debuggerd /system/bin/debuggerd

## Daemon processes to be run by init.
##
service ueventd /sbin/ueventd
    class core
    critical

service console /system/bin/sh
    class core
    console
    disabled
    user shell
    group log

on property:ro.debuggable=1
    start console

#service recovery /sbin/recovery

#service adbd /sbin/adbd recovery
#    disabled

on property:persist.service.adb.enable=1
    start adbd

on property:persist.service.adb.enable=0
    stop adbd

service playlpm /system/bin/playlpm
    class main
    user root

service lpmkey /system/bin/lpmkey
    class main
    user root

